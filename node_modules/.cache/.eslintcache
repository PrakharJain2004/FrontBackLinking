[{"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\index.js":"1","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\Dashboard.js":"2","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\ProfilePage.js":"3","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\LoginForm.js":"4","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\index.js":"5","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\ProfilePage.js":"6","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\Dashboard.js":"7","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\PostPage.js":"8","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\LoginForm.js":"9","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\SearchPage.js":"10"},{"size":6430,"mtime":1694969786848,"results":"11","hashOfConfig":"12"},{"size":7013,"mtime":1695019099464,"results":"13","hashOfConfig":"12"},{"size":15022,"mtime":1694867171299,"results":"14","hashOfConfig":"12"},{"size":3084,"mtime":1694972749820,"results":"15","hashOfConfig":"12"},{"size":6682,"mtime":1695310083393,"results":"16","hashOfConfig":"17"},{"size":15022,"mtime":1694867171299,"results":"18","hashOfConfig":"17"},{"size":7013,"mtime":1695019099464,"results":"19","hashOfConfig":"17"},{"size":10829,"mtime":1695308223160,"results":"20","hashOfConfig":"17"},{"size":3085,"mtime":1695295978469,"results":"21","hashOfConfig":"17"},{"size":2033,"mtime":1695308808983,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l7b5r7",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c4dmff",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\index.js",["56","57","58","59","60","61","62"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\Dashboard.js",["63","64","65","66"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\ProfilePage.js",["67","68","69"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\LoginForm.js",[],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\index.js",["70","71","72","73","74","75","76","77","78","79","80","81","82"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\ProfilePage.js",["83","84","85"],[],"import React, {useEffect, useState} from 'react';\r\n\r\n\r\n    const ProfilePage = ({user , activeTab, handleTabClick,setUserData}) => {\r\n        const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n        const [showStickyNote, setShowStickyNote] = useState(true);\r\n        const formatTimeDifference = (postDate,mentionDate) => {\r\n            const currentDate = new Date();\r\n            const timeDifference = currentDate - new Date(postDate);\r\n\r\n            if (timeDifference < 60000) { // Less than 1 minute\r\n                return Math.floor(timeDifference / 1000) + \" s\";\r\n            } else if (timeDifference < 3600000) { // Less than 1 hour\r\n                return Math.floor(timeDifference / 60000) + \" m\";\r\n            } else if (timeDifference < 86400000) { // Less than 1 day\r\n                return Math.floor(timeDifference / 3600000) + \" h\";\r\n            } else { // More than 1 day\r\n                return Math.floor(timeDifference / 86400000) + \" d\";\r\n            }\r\n        };\r\n\r\n        useEffect(() => {\r\n            // Update window width on resize\r\n            const handleResize = () => {\r\n                setWindowWidth(window.innerWidth);\r\n            };\r\n\r\n            window.addEventListener('resize', handleResize);\r\n\r\n\r\n            const handleScroll = () => {\r\n                setShowStickyNote(window.scrollY <= 0); // Show sticky note when scrolling up\r\n            };\r\n\r\n            window.addEventListener('scroll', handleScroll);\r\n\r\n            // Clean up event listener on unmount\r\n            return () => {\r\n                window.removeEventListener('resize', handleResize);\r\n                window.removeEventListener('scroll', handleScroll);\r\n            };\r\n        }, []);\r\n        const getStickyNoteColor = (index) => {\r\n            // Replace this logic with your color generation or predefined colors\r\n            const colors = ['rgba(252,133,189,0.72)', 'rgba(137,231,255,0.72)', 'rgba(255,137,137,0.72)', 'rgba(255,241,137,0.72)', 'rgba(170,137,255,0.72)', 'rgba(136,253,136,0.72)',];\r\n            return colors[index % colors.length];\r\n        };\r\n        const getStickyNoteColor1 = (index) => {\r\n            // Replace this logic with your color generation or predefined colors\r\n            const colors = ['#ff76b3', '#76cfff', '#FF7676FF', '#ffef76', '#9b76ff', '#76fd76',];\r\n            return colors[index % colors.length];\r\n        };\r\n        const handleUnfriend = (friendName) => {\r\n            // Create a copy of the user data\r\n            const updatedUserData = { ...user };\r\n\r\n            // Find the index of the friend in the friends list\r\n            const friendIndex = updatedUserData.friends.findIndex(\r\n                (friend) => friend.name === friendName\r\n            );\r\n\r\n            // Remove the friend from the list\r\n            if (friendIndex !== -1) {\r\n                updatedUserData.friends.splice(friendIndex, 1);\r\n                setUserData(updatedUserData);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={{ marginBottom: windowWidth <= 768 ? '60px' : '0' }}>\r\n                <p style={{fontFamily: 'Helvetica', fontSize: '30px'}}><b>{user.name}</b> </p>\r\n                <div>\r\n                    <img src={user.profileImage} style={{width: '70px', height: '70px', borderRadius: '50%', position:'absolute', top: '20px', right: '14px'}}/>\r\n                   <br/>\r\n                    <p style={{fontFamily: 'Helvetica',position:'absolute', top: '60px'}}>{user.branch}</p>\r\n                    <p style={{fontFamily: 'Helvetica',position:'absolute', top: '80px'}}>{user.bio}</p>\r\n                </div>\r\n\r\n\r\n                <div style={{ display: 'flex', marginTop: '20px' , justifyContent: 'space-between',width: '100%', }}>\r\n                    <div\r\n                        className={`tab ${activeTab === 'posts' ? 'active' : ''}`}\r\n                        onClick={() => handleTabClick('posts')}\r\n                        style={{\r\n                            flex: 1,\r\n                            fontFamily: 'Helvetica', fontSize: '20px',\r\n                            textAlign: 'center',\r\n                            color: activeTab === 'posts' ? '#000' : '#c0c0c0',\r\n                        }}\r\n                    >\r\n                        <b>Posts</b>\r\n                    </div>\r\n                    <div\r\n                        className={`tab ${activeTab === 'mentioned' ? 'active' : ''}`}\r\n                        onClick={() => handleTabClick('mentioned')}\r\n                        style={{\r\n                            flex: 1,\r\n                            fontFamily: 'Helvetica', fontSize: '20px',\r\n                            textAlign: 'center',\r\n                            color: activeTab === 'mentioned' ? '#000' : '#c0c0c0',\r\n                        }}\r\n\r\n                    >\r\n                        <b>Mentions</b>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`tab ${activeTab === 'friends' ? 'active' : ''}`}\r\n                        onClick={() => handleTabClick('friends')}\r\n                        style={{\r\n                                flex: 1,\r\n                                fontFamily: 'Helvetica', fontSize: '20px',\r\n                                textAlign: 'center',\r\n                                color: activeTab === 'friends' ? '#000' : '#c0c0c0',}}\r\n                    >\r\n                        <b>Friends</b>\r\n                    </div>\r\n\r\n                </div>\r\n                <hr />\r\n                {activeTab === 'posts' && (\r\n                    <>\r\n\r\n\r\n                            {user.posts.map((post, index) => (\r\n                                    <div key={index} style={{\r\n                                        borderRadius: '11px',\r\n                                        borderBottomLeftRadius: '30px',\r\n                                        background: getStickyNoteColor(index),\r\n                                        position: 'relative',\r\n                                        top: '0',\r\n                                        zIndex: 'auto',\r\n                                        border: '1px solid #000',\r\n                                        padding: '10px',\r\n                                        margin: '10px',\r\n                                        maxWidth: '100%',\r\n                                        boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\r\n                                    }}>\r\n                                        <div\r\n                                            style={{zIndex: '1', fontFamily: 'Helvetica', position: 'relative'}}>\r\n                                            {post.mentioned_user !== null && <p style={{\r\n                                                fontFamily: 'Helvetica',\r\n                                                color: '#000',\r\n                                                fontSize: '15px',\r\n                                                position: 'relative',\r\n                                                top: '-15px'\r\n                                            }}><b>@{post.mentioned_user}</b></p>}\r\n                                            <p style={{\r\n                                                position: 'absolute',\r\n                                                top: '-30px',\r\n                                                right: '4px',\r\n                                                color: '#000',\r\n                                                fontFamily: 'Helvetica'\r\n                                            }}>{formatTimeDifference(post.date_posted)}</p>\r\n                                            <p style={{\r\n                                                fontFamily: 'Helvetica',\r\n                                                position: 'relative',\r\n                                                left: '27px',\r\n                                                top: '-30px'\r\n                                            }}>{post.content}</p>\r\n                                        </div>\r\n                                        <div\r\n                                            style={{\r\n                                                borderBottom: '2px solid #000',\r\n                                                borderRight: '1px solid #000',\r\n                                                borderTopRightRadius: '0px',\r\n                                                borderTopLeftRadius: '30px',\r\n                                                borderBottomRightRadius: '11px',\r\n                                                borderBottomLeftRadius: '0px',\r\n                                                position: 'absolute',\r\n                                                bottom: '-0px',\r\n                                                left: '27px',\r\n                                                width: '30px',\r\n                                                height: '30px',\r\n                                                background: getStickyNoteColor1(index),\r\n                                                clipPath: 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%, 0% 75%)',\r\n                                                zIndex: '0',\r\n                                                transform: 'rotate(-81deg)',\r\n                                                transformOrigin: 'bottom left',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                    </>\r\n                )}\r\n                {activeTab === 'mentioned' && (\r\n                    <>\r\n                        {user.mentioned.map((mention, index) => (\r\n                            <div key={index} style={{\r\n                                borderRadius: '11px',\r\n                                borderBottomLeftRadius: '30px',\r\n                                background: getStickyNoteColor(index),\r\n                                position: 'relative',\r\n                                top: '0',\r\n                                zIndex: 'auto',\r\n                                border: '1px solid #000',\r\n                                padding: '10px',\r\n                                margin: '10px',\r\n                                maxWidth: '100%',\r\n                                boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\r\n                            }}>\r\n                                <div\r\n                                    style={{zIndex: '1', fontFamily: 'Helvetica', position: 'relative'}}>\r\n                                    {mention.mentioned_user !== null && <p style={{\r\n                                        fontFamily: 'Helvetica',\r\n                                        color: '#000',\r\n                                        fontSize: '15px',\r\n                                        position: 'relative',\r\n                                        top: '-15px'\r\n                                    }}><b>@{mention.mentioned_user}</b></p>}\r\n                                    <p style={{\r\n                                        position: 'absolute',\r\n                                        top: '-30px',\r\n                                        right: '4px',\r\n                                        color: '#000',\r\n                                        fontFamily: 'Helvetica'\r\n                                    }}>{formatTimeDifference(mention.date_posted)}</p>\r\n                                    <p style={{\r\n                                        fontFamily: 'Helvetica',\r\n                                        position: 'relative',\r\n                                        left: '27px',\r\n                                        top: '-30px'\r\n                                    }}>{mention.content}</p>\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        borderBottom: '2px solid #000',\r\n                                        borderRight: '1px solid #000',\r\n                                        borderTopRightRadius: '0px',\r\n                                        borderTopLeftRadius: '30px',\r\n                                        borderBottomRightRadius: '11px',\r\n                                        borderBottomLeftRadius: '0px',\r\n                                        position: 'absolute',\r\n                                        bottom: '-0px',\r\n                                        left: '27px',\r\n                                        width: '30px',\r\n                                        height: '30px',\r\n                                        background: getStickyNoteColor1(index),\r\n                                        clipPath: 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%, 0% 75%)',\r\n                                        zIndex: '0',\r\n                                        transform: 'rotate(-81deg)',\r\n                                        transformOrigin: 'bottom left',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                {activeTab === 'friends' && (\r\n                    <>\r\n                        {user.friends.map((friend, index) => (\r\n\r\n                                <div key={index} style={{ display: 'flex', alignItems: 'center',borderBottom: '1px solid #ccc', padding: '0px 0' }}>\r\n                                    <img src={friend.image} style={{ width: '40px', height: '40px', borderRadius: '50%', marginRight: '10px' }} />\r\n                                    <div style={{ flex: '1', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                        <div>\r\n                                            <p style={{ fontFamily: 'Helvetica', color: '#000', fontSize: '17px' ,position: 'relative',top:'4px', margin: '10px'}}><b>@{friend.username}</b></p>\r\n                                            <p style={{ fontFamily: 'Helvetica',color: '#8f8f8f',position: 'relative',top:'-2px', fontSize: '17px', margin: '10px' }}>{friend.name}</p>\r\n                                        </div>\r\n                                        <button style={{ fontFamily: 'Helvetica',backgroundColor: 'white' ,padding: '6px 10px',border: '1.2px solid #ccc',borderRadius:'10px', fontSize: '17px'}} onClick={() => handleUnfriend(friend.name)}><b>Unfriend</b></button>\r\n                                    </div>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                {/*{activeTab === 'clubs' && (*/}\r\n                {/*    <>*/}\r\n                {/*        /!* Render clubs content here *!/*/}\r\n                {/*    </>*/}\r\n                {/*)}*/}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default ProfilePage;",[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\Dashboard.js",["86","87","88","89"],[],"import React, { useState, useEffect } from 'react';\r\nimport homeIcon from './homeicon.png';\r\nimport searchIcon from './searchicon.png';\r\nimport postIcon from './posticon.png';\r\nimport profileIcon from './profileicon.png';\r\n\r\nconst Dashboard = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const [showStickyNote, setShowStickyNote] = useState(true);\r\n    const jsonData = [\r\n        {\r\n            \"content\": \"hello welocome to rvc \",\r\n            \"date_posted\": \"2023-08-06T15:15:31Z\",\r\n            \"author\": 3,\r\n            \"mentioned_user\": 2\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:31Z\",\r\n            \"author\": 3,\r\n            \"mentioned_user\": 2\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n        {\r\n            \"post id\" : 2,\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:31Z\",\r\n            \"author\": 3,\r\n            \"mentioned_user\": 2\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n        {\r\n            \"content\": \"Lorem Ipsum...\",\r\n            \"date_posted\": \"2023-08-06T15:15:57Z\",\r\n            \"author\": 2,\r\n            \"mentioned_user\": 3\r\n        },\r\n    ];\r\n\r\n    const formatTimeDifference = (postDate) => {\r\n        const currentDate = new Date();\r\n        const timeDifference = currentDate - new Date(postDate);\r\n\r\n        if (timeDifference < 60000) { // Less than 1 minute\r\n            return Math.floor(timeDifference / 1000) + \" s\";\r\n        } else if (timeDifference < 3600000) { // Less than 1 hour\r\n            return Math.floor(timeDifference / 60000) + \" m\";\r\n        } else if (timeDifference < 86400000) { // Less than 1 day\r\n            return Math.floor(timeDifference / 3600000) + \" h\";\r\n        } else { // More than 1 day\r\n            return Math.floor(timeDifference / 86400000) + \" d\";\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update window width on resize\r\n        const handleResize = () => {\r\n            setWindowWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n\r\n\r\n            const handleScroll = () => {\r\n                setShowStickyNote(window.scrollY <= 0); // Show sticky note when scrolling up\r\n            };\r\n\r\n            window.addEventListener('scroll', handleScroll);\r\n\r\n            // Clean up event listener on unmount\r\n            return () => {\r\n                window.removeEventListener('resize', handleResize);\r\n                window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n        const getStickyNoteColor = (index) => {\r\n            // Replace this logic with your color generation or predefined colors\r\n            const colors = ['#FC85BDB7', '#89E7FFB7','#FF8989B7', '#FFF189B7','#AA89FFB7',  '#88FD88B7',];\r\n            return colors[index % colors.length];\r\n        };\r\n    const getStickyNoteColor1 = (index) => {\r\n        // Replace this logic with your color generation or predefined colors\r\n        const colors = ['#ff76b3', '#76cfff','#FF7676FF','#ffef76','#9b76ff','#76fd76', ];\r\n        return colors[index % colors.length];\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginBottom: windowWidth <= 768 ? '60px' : '0' }}>\r\n            {/* Top Bar */}\r\n            <div style={{ display: 'flex', alignItems: 'center',justifyContent:'center', padding: '13px', borderBottom: '1px solid #808080' }}>\r\n                <div>\r\n                    {/* Logo */}\r\n                    <img src=\"path_to_your_logo.png\" alt=\"RV Connected\" style={{ height: '50px'}} />\r\n                </div>\r\n\r\n            </div>\r\n            {jsonData.map((post, index) => (\r\n                <div key={index} style={{  borderRadius:'11px', borderBottomLeftRadius:'30px', background: getStickyNoteColor(index), position: showStickyNote ? 'sticky' : 'relative', top: showStickyNote ? '0' : 'initial', zIndex: showStickyNote ? '10' : 'auto',border: '1px solid #000', padding: '10px', margin: '10px' , maxWidth:'100%', boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)' }}>\r\n                    <div\r\n                        style={{  zIndex: '1', fontFamily: 'Helvetica',position: 'relative',}}>\r\n                    {post.mentioned_user !== null && <p style={{  fontFamily:'Helvetica',color: '#000',fontSize:'15px',position: 'relative',top: '-15px' }}><b>@{post.mentioned_user}</b></p>}\r\n                    <p style={{ position: 'absolute', top: '-30px', right: '4px' , color: '#000', fontFamily:'Helvetica' }}>{formatTimeDifference(post.date_posted)}</p>\r\n                    <p style={{fontFamily:'Helvetica',position: 'relative',left: '27px',top: '-30px'}}>{post.content}</p>\r\n                </div>\r\n                    <div\r\n                        style={{\r\n\r\n                            borderBottom:'2px solid #000',\r\n\r\n                            borderRight:'1px solid #000',\r\n                            borderTopRightRadius: '0px',\r\n                            borderTopLeftRadius: '30px',\r\n                            borderBottomRightRadius: '11px',\r\n                            borderBottomLeftRadius: '0px',\r\n                            position: 'absolute',\r\n                            bottom: '-0px', // Adjust as needed\r\n                            left: '27px', // Adjust as needed\r\n                            width: '30px', // Adjust as needed\r\n                            height: '30px', // Adjust as needed\r\n                            background: getStickyNoteColor1(index), // Use the same color as sticky note\r\n                            clipPath: 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%, 0% 75%)', // Create fold effect\r\n                            zIndex: '0',\r\n                            transform: 'rotate(-81deg)', // Rotate the folded corner\r\n                            transformOrigin: 'bottom left', // Set the rotation origin\r\n                        }}\r\n                    />\r\n                </div>\r\n            ))}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\PostPage.js",["90","91","92","93"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\LoginForm.js",[],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\SearchPage.js",["94"],[],{"ruleId":"95","severity":1,"message":"96","line":33,"column":37,"nodeType":"97","messageId":"98","endLine":33,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":45,"column":33,"nodeType":"97","messageId":"98","endLine":45,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":71,"column":23,"nodeType":"101","messageId":"102","endLine":71,"endColumn":35},{"ruleId":"103","severity":1,"message":"104","line":110,"column":9,"nodeType":"105","messageId":"106","endLine":113,"endColumn":10},{"ruleId":"107","severity":1,"message":"108","line":121,"column":25,"nodeType":"109","endLine":121,"endColumn":117},{"ruleId":"107","severity":1,"message":"108","line":122,"column":25,"nodeType":"109","endLine":122,"endColumn":116},{"ruleId":"107","severity":1,"message":"108","line":123,"column":25,"nodeType":"109","endLine":123,"endColumn":122},{"ruleId":"99","severity":1,"message":"110","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"111","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"99","severity":1,"message":"113","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":19},{"ruleId":"99","severity":1,"message":"114","line":6,"column":16,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":73,"column":21,"nodeType":"109","endLine":73,"endColumn":161},{"ruleId":"107","severity":1,"message":"108","line":254,"column":37,"nodeType":"109","endLine":254,"endColumn":147},{"ruleId":"95","severity":1,"message":"96","line":27,"column":61,"nodeType":"97","messageId":"98","endLine":27,"endColumn":62},{"ruleId":"95","severity":1,"message":"96","line":28,"column":61,"nodeType":"97","messageId":"98","endLine":28,"endColumn":62},{"ruleId":"95","severity":1,"message":"96","line":29,"column":60,"nodeType":"97","messageId":"98","endLine":29,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":30,"column":60,"nodeType":"97","messageId":"98","endLine":30,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":31,"column":60,"nodeType":"97","messageId":"98","endLine":31,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":32,"column":60,"nodeType":"97","messageId":"98","endLine":32,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":38,"column":37,"nodeType":"97","messageId":"98","endLine":38,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":64,"column":23,"nodeType":"101","messageId":"102","endLine":64,"endColumn":35},{"ruleId":"103","severity":1,"message":"104","line":103,"column":9,"nodeType":"105","messageId":"106","endLine":106,"endColumn":10},{"ruleId":"107","severity":1,"message":"108","line":115,"column":25,"nodeType":"109","endLine":115,"endColumn":117},{"ruleId":"107","severity":1,"message":"108","line":116,"column":25,"nodeType":"109","endLine":116,"endColumn":120},{"ruleId":"107","severity":1,"message":"108","line":117,"column":25,"nodeType":"109","endLine":117,"endColumn":116},{"ruleId":"107","severity":1,"message":"108","line":118,"column":25,"nodeType":"109","endLine":118,"endColumn":122},{"ruleId":"99","severity":1,"message":"114","line":6,"column":16,"nodeType":"101","messageId":"102","endLine":6,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":73,"column":21,"nodeType":"109","endLine":73,"endColumn":161},{"ruleId":"107","severity":1,"message":"108","line":254,"column":37,"nodeType":"109","endLine":254,"endColumn":147},{"ruleId":"99","severity":1,"message":"110","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"111","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"99","severity":1,"message":"113","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":7,"column":12,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"99","severity":1,"message":"116","line":7,"column":19,"nodeType":"101","messageId":"102","endLine":7,"endColumn":27},{"ruleId":"99","severity":1,"message":"117","line":29,"column":19,"nodeType":"101","messageId":"102","endLine":29,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":232,"column":37,"nodeType":"109","endLine":232,"endColumn":145},{"ruleId":"107","severity":1,"message":"108","line":37,"column":21,"nodeType":"109","endLine":37,"endColumn":129},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'setUsersData' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'homeIcon' is defined but never used.","'searchIcon' is defined but never used.","'postIcon' is defined but never used.","'profileIcon' is defined but never used.","'showStickyNote' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'response' is assigned a value but never used."]