[{"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\index.js":"1","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\Dashboard.js":"2","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\ProfilePage.js":"3","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\LoginForm.js":"4","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\index.js":"5","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\ProfilePage.js":"6","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\Dashboard.js":"7","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\PostPage.js":"8","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\LoginForm.js":"9","C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\SearchPage.js":"10"},{"size":6430,"mtime":1694969786848,"results":"11","hashOfConfig":"12"},{"size":7013,"mtime":1695019099464,"results":"13","hashOfConfig":"12"},{"size":15022,"mtime":1694867171299,"results":"14","hashOfConfig":"12"},{"size":3084,"mtime":1694972749820,"results":"15","hashOfConfig":"12"},{"size":8957,"mtime":1695739307438,"results":"16","hashOfConfig":"17"},{"size":12636,"mtime":1695381909010,"results":"18","hashOfConfig":"17"},{"size":18702,"mtime":1696018062263,"results":"19","hashOfConfig":"17"},{"size":11491,"mtime":1695740749805,"results":"20","hashOfConfig":"17"},{"size":14915,"mtime":1695758107945,"results":"21","hashOfConfig":"17"},{"size":5512,"mtime":1695653857656,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l7b5r7",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c4dmff",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\index.js",["55","56","57","58","59","60","61"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\Dashboard.js",["62","63","64","65"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\ProfilePage.js",["66","67","68"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontEndM\\RVC\\src\\LoginForm.js",[],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\index.js",["69","70","71","72","73","74","75"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\ProfilePage.js",["76","77","78"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\Dashboard.js",["79","80","81","82","83","84","85","86","87","88"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\PostPage.js",["89","90","91","92","93","94"],[],"import React, { useState, useEffect } from 'react';\r\nimport CrossIcon from './cross.png';\r\nimport axios from 'axios';\r\n\r\nconst PostPage = ({ switchToDashboard, users }) => {\r\n    const colorNameMap = {\r\n        '#88FD88B7': 'green',\r\n        '#76fd76': 'green',\r\n        '#AA89FFB7': 'purple',\r\n        '#9b76ff': 'purple',\r\n        '#FFF189B7': 'yellow',\r\n        '#ffef76': 'yellow',\r\n        '#FF8989B7': 'red',\r\n        '#FF7676FF': 'red',\r\n        '#89E7FFB7': 'blue',\r\n        '#76cfff': 'blue',\r\n        '#FC85BDB7': 'pink',\r\n        '#ff76b3': 'pink',\r\n    };\r\n    const [newContent, setNewContent] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [mentionedUsers, setMentionedUsers] = useState([]);\r\n    const [suggestedMentionedUsers, setSuggestedMentionedUsers] = useState([]);\r\n    const [selectedStickyNoteColorIndex, setSelectedStickyNoteColorIndex] = useState(0);\r\n    const [showStickyNote, setShowStickyNote] = useState(true);\r\n\r\n    const handleItemSubmit = async () => {\r\n        if (newContent.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        // Extract mentioned user's name\r\n        const mentionedUserMatch = newContent.match(/@(\\w+)/);\r\n        const mentionedUser = mentionedUserMatch ? mentionedUserMatch[1] : null; // If no mention, set it to null\r\n\r\n        // Get the selected color name from colorNameMap\r\n        const selectedColorShade = stickyNoteColors[selectedStickyNoteColorIndex];\r\n        const colorCode = colorNameMap[selectedColorShade];\r\n\r\n        // Create the payload based on whether a mentioned user is present\r\n        const payload = {\r\n            content: newContent,\r\n            color_code: colorCode,\r\n            date_posted: new Date().toISOString(),\r\n            author: '', // Replace with actual user info\r\n            stickyNoteColor: selectedStickyNoteColorIndex,\r\n        };\r\n\r\n        // Include mentioned_user field only if mentionedUser is not null\r\n        if (mentionedUser !== null) {\r\n            payload.mentioned_user = mentionedUser;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://192.168.1.196:8000/posts/', payload, {\r\n                headers: {\r\n                    Authorization: `Token ${token}`,\r\n                },\r\n            });\r\n\r\n            // Assuming you have a function switchToDashboard that handles navigation\r\n            switchToDashboard(); // Redirect to the dashboard\r\n\r\n            // Rest of the code...\r\n        } catch (error) {\r\n            // Handle errors here\r\n            console.error('Error posting item:', error);\r\n        }\r\n    };\r\n\r\n    const fetchUserSuggestions = async (mentionInput) => {\r\n        try {\r\n            const response = await axios.get('http://192.168.1.196:8000/users/');\r\n            const allUsers = response.data;\r\n            const filteredUsers = allUsers.filter((user) =>\r\n                user.username.toLowerCase().includes(mentionInput)\r\n            );\r\n            const uniqueSuggestions = filteredUsers.filter((user, index, self) =>\r\n                index === self.findIndex((u) => u.username === user.username)\r\n            );\r\n\r\n            setSuggestedMentionedUsers(uniqueSuggestions);\r\n        } catch (error) {\r\n            console.error('Error fetching user suggestions:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        const inputText = event.target.value;\r\n        setNewContent(inputText);\r\n\r\n        if (inputText.length >= 3 && inputText.includes('@')) {\r\n            const lastMentionStart = inputText.lastIndexOf('@');\r\n            const mentionInput = inputText.substring(lastMentionStart + 1).toLowerCase();\r\n            fetchUserSuggestions(mentionInput);\r\n        } else {\r\n            setSuggestedMentionedUsers([]);\r\n        }\r\n    };\r\n\r\n    const handleMentionClick = (user) => {\r\n        const mention = `@${user.username}`;\r\n        const lastMentionStart = newContent.lastIndexOf('@');\r\n\r\n        if (lastMentionStart >= 0) {\r\n            const preMentionText = newContent.substring(0, lastMentionStart);\r\n            const updatedContent = preMentionText + mention + ' ';\r\n            setNewContent(updatedContent);\r\n        } else {\r\n            setNewContent(mention + ' ');\r\n        }\r\n        setMentionedUsers([...mentionedUsers, user]);\r\n        setSuggestedMentionedUsers([]);\r\n    };\r\n\r\n    const getStickyNoteColor = () => {\r\n        return stickyNoteColors[selectedStickyNoteColorIndex];\r\n    };\r\n\r\n    const getStickyNoteColor1 = () => {\r\n        return stickyNoteColors1[selectedStickyNoteColorIndex];\r\n    };\r\n\r\n    const handleColorChange = (colorIndex) => {\r\n        const shade1 = stickyNoteColors[colorIndex];\r\n        const shade2 = stickyNoteColors1[colorIndex];\r\n        const combinedColor = { shade1, shade2 };\r\n        setSelectedStickyNoteColorIndex(colorIndex);\r\n        const colorName = colorNameMap[shade1] || colorNameMap[shade2];\r\n        // console.log(colorName);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setShowStickyNote(window.scrollY <= 0);\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    const stickyNoteColors = [\r\n        '#FC85BDB7',\r\n        '#89E7FFB7',\r\n        '#FF8989B7',\r\n        '#FFF189B7',\r\n        '#AA89FFB7',\r\n        '#88FD88B7',\r\n    ];\r\n    const stickyNoteColors1 = [\r\n        '#ff76b3',\r\n        '#76cfff',\r\n        '#FF7676FF',\r\n        '#ffef76',\r\n        '#9b76ff',\r\n        '#76fd76',\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={switchToDashboard} style={{ position: 'absolute', top: '20px', left: '10px', background: 'none', border: 'none' }}>\r\n                <img src={CrossIcon} alt=\"Close\" style={{ width: '15px', height: '15px' }} />\r\n            </button>\r\n            <div style={{ marginTop: '110px' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n                    {stickyNoteColors1.map((color, index) => (\r\n                        <div\r\n                            key={index}\r\n                            onClick={() => handleColorChange(index)}\r\n                            style={{\r\n                                width: '20px',\r\n                                height: '20px',\r\n                                backgroundColor: color,\r\n                                borderRadius: '50%',\r\n                                margin: '0 5px',\r\n                                cursor: 'pointer',\r\n                                border: selectedStickyNoteColorIndex === index ? '2px solid #000' : 'none',\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        background: getStickyNoteColor(),\r\n                        borderRadius: '11px',\r\n                        borderBottomLeftRadius: '30px',\r\n                        position: showStickyNote ? 'sticky' : 'relative',\r\n                        top: showStickyNote ? '0' : 'initial',\r\n                        zIndex: showStickyNote ? '10' : 'auto',\r\n                        border: '1px solid #000',\r\n                        padding: '10px',\r\n                        margin: '10px',\r\n                        maxWidth: '100%',\r\n                        boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            borderBottom:'2px solid #000',\r\n                            borderRight:'1px solid #000',\r\n                            borderTopRightRadius: '0px',\r\n                            borderTopLeftRadius: '30px',\r\n                            borderBottomRightRadius: '11px',\r\n                            borderBottomLeftRadius: '0px',\r\n                            position: 'absolute',\r\n                            bottom: '-0px',\r\n                            left: '27px',\r\n                            width: '30px',\r\n                            height: '30px',\r\n                            background: getStickyNoteColor1(),\r\n                            clipPath: 'polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%, 0% 75%)',\r\n                            zIndex: '0',\r\n                            transform: 'rotate(-81deg)',\r\n                            transformOrigin: 'bottom left',\r\n                        }}\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '0',\r\n                            left: '0',\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            backgroundColor: getStickyNoteColor(),\r\n                            opacity: '1%',\r\n                            zIndex: '-1',\r\n                            borderRadius: '11px',\r\n                        }}\r\n                    />\r\n                    <textarea\r\n                        placeholder=\"@mention Write your confession here...\"\r\n                        value={newContent}\r\n                        onChange={handleInputChange}\r\n                        rows={Math.min(10, newContent.split('\\n').length + 1)}\r\n                        style={{  position: 'relative', zIndex: '1',backgroundColor: 'transparent',resize: 'none', marginLeft: '25px',border: 'none',borderRadius:'11px',outline: 'none', lineHeight:'1.5',width: 'calc(100% - 25px)', fontSize: '20px' , fontFamily:'Helvetica'}}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    {suggestedMentionedUsers.length > 0 && (\r\n                        <ul>\r\n                            {suggestedMentionedUsers.map((user, index) => (\r\n                                <li key={index} style={{ display: 'flex', alignItems: 'center',borderBottom: '1px solid #ccc', padding: '0px 0',position: 'relative',left: '-20px' }} onClick={() => handleMentionClick(user)}>\r\n                                    <img src={user.image} style={{ width: '40px', height: '40px', borderRadius: '50%', marginRight: '10px' }} />\r\n                                    <div style={{ flex: '1', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                        <div>\r\n                                            <p style={{ fontFamily: 'Helvetica', color: '#000', fontSize: '17px' ,position: 'relative',top:'4px', margin: '10px'}}><b>@{user.username}</b></p>\r\n                                            <p style={{ fontFamily: 'Helvetica',color: '#8f8f8f',position: 'relative',top:'-2px', fontSize: '17px', margin: '10px' }}>{user.name}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n                <button onClick={handleItemSubmit} style={{ position: 'fixed', top: '20px', right: '10px', background: '#000', color: '#fff', border: 'none', borderRadius: '11px', padding: '6px 12px', fontSize: '20px', cursor: 'pointer', fontFamily:'Helvetica' }}><b>Confess!</b></button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n",[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\LoginForm.js",["95"],[],"C:\\Users\\Prakhar Jain\\WebstormProjects\\FrontBackLinking\\FrontBackLinking\\src\\SearchPage.js",[],[],{"ruleId":"96","severity":1,"message":"97","line":33,"column":37,"nodeType":"98","messageId":"99","endLine":33,"endColumn":38},{"ruleId":"96","severity":1,"message":"97","line":45,"column":33,"nodeType":"98","messageId":"99","endLine":45,"endColumn":34},{"ruleId":"100","severity":1,"message":"101","line":71,"column":23,"nodeType":"102","messageId":"103","endLine":71,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":110,"column":9,"nodeType":"106","messageId":"107","endLine":113,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":121,"column":25,"nodeType":"110","endLine":121,"endColumn":117},{"ruleId":"108","severity":1,"message":"109","line":122,"column":25,"nodeType":"110","endLine":122,"endColumn":116},{"ruleId":"108","severity":1,"message":"109","line":123,"column":25,"nodeType":"110","endLine":123,"endColumn":122},{"ruleId":"100","severity":1,"message":"111","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"113","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"114","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":19},{"ruleId":"100","severity":1,"message":"115","line":6,"column":16,"nodeType":"102","messageId":"103","endLine":6,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":73,"column":21,"nodeType":"110","endLine":73,"endColumn":161},{"ruleId":"108","severity":1,"message":"109","line":254,"column":37,"nodeType":"110","endLine":254,"endColumn":147},{"ruleId":"96","severity":1,"message":"97","line":68,"column":37,"nodeType":"98","messageId":"99","endLine":68,"endColumn":38},{"ruleId":"100","severity":1,"message":"101","line":94,"column":23,"nodeType":"102","messageId":"103","endLine":94,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":136,"column":9,"nodeType":"106","messageId":"107","endLine":139,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":147,"column":25,"nodeType":"110","endLine":156,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":157,"column":25,"nodeType":"110","endLine":166,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":167,"column":25,"nodeType":"110","endLine":176,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":177,"column":25,"nodeType":"110","endLine":186,"endColumn":27},{"ruleId":"100","severity":1,"message":"115","line":6,"column":12,"nodeType":"102","messageId":"103","endLine":6,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":111,"column":17,"nodeType":"110","endLine":111,"endColumn":158},{"ruleId":"108","severity":1,"message":"109","line":237,"column":33,"nodeType":"110","endLine":237,"endColumn":143},{"ruleId":"100","severity":1,"message":"111","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":18},{"ruleId":"100","severity":1,"message":"113","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":16},{"ruleId":"100","severity":1,"message":"114","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"100","severity":1,"message":"115","line":15,"column":12,"nodeType":"102","messageId":"103","endLine":15,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":132,"column":8,"nodeType":"118","endLine":132,"endColumn":19,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"109","line":238,"column":57,"nodeType":"110","endLine":238,"endColumn":121},{"ruleId":"108","severity":1,"message":"109","line":238,"column":124,"nodeType":"110","endLine":238,"endColumn":191},{"ruleId":"108","severity":1,"message":"109","line":246,"column":29,"nodeType":"110","endLine":246,"endColumn":96},{"ruleId":"108","severity":1,"message":"109","line":275,"column":45,"nodeType":"110","endLine":284,"endColumn":50},{"ruleId":"100","severity":1,"message":"120","line":21,"column":12,"nodeType":"102","messageId":"103","endLine":21,"endColumn":17},{"ruleId":"100","severity":1,"message":"121","line":21,"column":19,"nodeType":"102","messageId":"103","endLine":21,"endColumn":27},{"ruleId":"100","severity":1,"message":"122","line":57,"column":19,"nodeType":"102","messageId":"103","endLine":57,"endColumn":27},{"ruleId":"100","severity":1,"message":"123","line":129,"column":15,"nodeType":"102","messageId":"103","endLine":129,"endColumn":28},{"ruleId":"100","severity":1,"message":"124","line":131,"column":15,"nodeType":"102","messageId":"103","endLine":131,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":248,"column":37,"nodeType":"110","endLine":248,"endColumn":145},{"ruleId":"108","severity":1,"message":"109","line":145,"column":13,"nodeType":"110","endLine":145,"endColumn":188},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'setUsersData' is assigned a value but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'homeIcon' is defined but never used.","'searchIcon' is defined but never used.","'postIcon' is defined but never used.","'profileIcon' is defined but never used.","'showStickyNote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'colorMapping'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'response' is assigned a value but never used.","'combinedColor' is assigned a value but never used.","'colorName' is assigned a value but never used.",{"desc":"126","fix":"127"},"Update the dependencies array to be: [authToken, colorMapping]",{"range":"128","text":"129"},[5293,5304],"[authToken, colorMapping]"]